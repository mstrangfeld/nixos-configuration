#+title: Config

* Basic Doom setup
#+begin_src emacs-lisp
(setq user-full-name "Marvin Strangfeld"
      user-mail-address "marvin@strangfeld.io")

(let ((fontsize (pcase system-name
                  ("Nyx" 16)
                  ("Kronos" 26)
                  ("Apollo" 16)
                  (_ 26))))
  (setq doom-font (font-spec :family "FiraCode Nerd Font" :size fontsize :slant 'normal :weight 'normal)
        doom-variable-pitch-font (font-spec :family "Fira Sans" :size fontsize)))

(setq doom-theme 'doom-material-dark)

;; This determines the style of line numbers in effect. If set to `nil', line
;; numbers are disabled. For relative line numbers, set this to `relative'.
(setq display-line-numbers-type t)
#+end_src

* Git
** Forge
#+begin_src emacs-lisp
(use-package! forge
  :config
  (add-to-list 'forge-alist '("gitlab.open-xchange.com" "gitlab.open-xchange.com/api/v4" "gitlab.open-xchange.com" forge-gitlab-repository)))
#+end_src

* Spell checking
- Set the default dictionary to english
- Disable spell check by default (Enable with SPC t s)

#+begin_src emacs-lisp
(setq ispell-dictionary "en")
(remove-hook! 'text-mode-hook #'spell-fu-mode)
#+end_src

* Org
** Task Management
#+begin_src emacs-lisp
(setq org-directory "~/org/")
(setq org-agenda-files (list "inbox.org" "projects.org" "ping.org"))
(setq org-capture-templates
      `(("t" "Todo [inbox]" entry
         (file "inbox.org")
         "* TODO %?\n%i")
        ("n" "Note [inbox]" entry
         (file "inbox.org")
         "* %u %?\n%i")
        ("r" "Referenced Capture Templates")
        ("rt" "Referenced Todo [inbox]" entry
         (file "inbox.org")
         "* TODO %?\n%i\n%a")
        ("rn" "Referenced Note [inbox]" entry
         (file "inbox.org")
         "* %u %?\n%i\n%a")
        ("i" "Idea [inbox]" entry
         (file "inbox.org")
         "* IDEA %?\n%i")))
(setq org-todo-keywords '((sequence "TODO(t)" "NEXT(n)" "HOLD(h)" "IDEA(i)" "|" "DONE(d)" "KILL(k)")))
(setq org-refile-targets '(("projects.org" :maxlevel . 3)
                           ("ping.org" :maxlevel . 2)
                           ("someday.org" :level . 1)))
#+end_src

** LaTeX Export
#+begin_src emacs-lisp
(setq org-latex-pdf-process '("latexmk -shell-escape -pdf -bibtex -f %f"))

(use-package! ox-extra
  :after org
  :config
  (ox-extras-activate '(ignore-headlines)))

(use-package! ox-latex
  :config
  (add-to-list 'org-latex-classes
               '("scrartcl"
                 "\\documentclass{scrartcl}"
                 ("\\section{%s}" . "\\section*{%s}")
                 ("\\subsection{%s}" . "\\subsection*{%s}")
                 ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
                 ("\\paragraph{%s}" . "\\paragraph*{%s}")
                 ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))
  )
#+end_src

** Org-ref
#+begin_src emacs-lisp
(after! org
  (require 'org-ref))

(after! org-ref
  (setq
   bibtex-completion-notes-path (concat (getenv "HOME") "/Documents/Notes/")
   bibtex-completion-bibliography (concat (getenv "HOME") "/Zotero/bibtex/library.bib")
   bibtex-completion-pdf-field "file"
   bibtex-completion-notes-template-multiple-files
   (concat
    "#+TITLE: ${title}\n"
    "#+ROAM_KEY: cite:${=key=}\n"
    "#+ROAM_TAGS: ${keywords}\n"
    "* TODO Notes\n"
    ":PROPERTIES:\n"
    ":Custom_ID: ${=key=}\n"
    ":NOTER_DOCUMENT: %(orb-process-file-field \"${=key=}\")\n"
    ":AUTHOR: ${author-abbrev}\n"
    ":JOURNAL: ${journaltitle}\n"
    ":DATE: ${date}\n"
    ":YEAR: ${year}\n"
    ":DOI: ${doi}\n"
    ":URL: ${url}\n"
    ":END:\n\n"
    )
   )
  )

(use-package! org-ref
  :config
  (setq
   org-ref-completion-library 'org-ref-ivy-cite
   org-ref-get-pdf-filename-function 'org-ref-get-pdf-filename-helm-bibtex
   bibtex-completion-bibliography (list (concat (getenv "HOME") "/Zotero/bibtex/library.bib"))
   bibtex-completion-notes-path (concat (getenv "HOME") "/Documents/Notes/bibnotes.org")
   org-ref-note-title-format "* TODO %y - %t\n :PROPERTIES:\n  :Custom_ID: %k\n  :NOTER_DOCUMENT: %F\n :ROAM_KEY: cite:%k\n  :AUTHOR: %9a\n  :JOURNAL: %j\n  :YEAR: %y\n  :VOLUME: %v\n  :PAGES: %p\n  :DOI: %D\n  :URL: %U\n :END:\n\n"
   org-ref-notes-directory (concat (getenv "HOME") "/Documents/Notes/")
   org-ref-notes-function 'orb-edit-notes
   )
  (add-hook 'org-export-before-parsing-hook #'org-ref-glossary-before-parsing))
#+end_src
* E-Mail
#+begin_src emacs-lisp
(use-package! mu4e
  :config
  ;; Avoid deleting the message and move to the trash folder instead
  (setf (plist-get (alist-get 'trash mu4e-marks) :action)
        (lambda (docid msg target)
          (mu4e--server-move docid (mu4e--mark-check-target target) "+S-u-N"))) ; Instead of "+T-N"
  ;; Set mail accounts
  (set-email-account! "strangfeld-io"
                      '( (mu4e-sent-folder       . "/strangfeld-io/Sent")
                         (mu4e-drafts-folder     . "/strangfeld-io/Drafts")
                         (mu4e-trash-folder      . "/strangfeld-io/Trash")
                         ;; Dynamic archiving under the year of the message (What Open-Xchange does)
                         (mu4e-refile-folder     . (lambda (msg)
                                                     (let* ((time (mu4e-message-field-raw msg :date)))
                                                       (format-time-string "/strangfeld-io/Archive/%Y" time))
                                                     ))
                         (smtpmail-smtp-user     . "marvin@strangfeld.io")
                         (mu4e-maildir-shortcuts
                          ("/strangfeld-io/Inbox" . ?i)
                          ("/strangfeld-io/Drafts" . ?d)
                          ("/strangfeld-io/Sent" . ?s)
                          ("/strangfeld-io/Trash" . ?t)
                          )
                         )
                      t)
  (set-email-account! "rwth"
                      '( (mu4e-sent-folder       . "/rwth/Sent Items")
                         (mu4e-drafts-folder     . "/rwth/Drafts")
                         (mu4e-trash-folder      . "/rwth/Deleted Items")
                         (mu4e-refile-folder     . "/rwth/Archive")
                         (smtpmail-smtp-user     . "marvin.strangfeld@rwth-aachen.de")
                         (mu4e-maildir-shortcuts
                          ("/rwth/Inbox" . ?i)
                          ("/rwth/Drafts" . ?d)
                          ("/rwth/Sent Items" . ?s)
                          ("/rwth/Deleted Items" . ?t)
                          )
                         )
                      t)
  ;; Use msmtp to send mails
  (setq sendmail-program "/etc/profiles/per-user/marvin/bin/msmtp"
        send-mail-function #'smtpmail-send-it
        message-sendmail-f-is-evil t
        message-sendmail-extra-arguments '("--read-envelope-from")
        message-send-mail-function #'message-send-mail-with-sendmail)
  )
#+end_src

* RSS
#+begin_src emacs-lisp
(add-hook! 'elfeed-search-mode-hook #'elfeed-update)
#+end_src
